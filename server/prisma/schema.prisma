// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Habitante {
  id_habitante Int     @id @default(autoincrement())
  nombre       String  @db.VarChar(255)
  ap           String? @db.VarChar(255)
  am           String? @db.VarChar(255)
  propietario  Boolean @default(false)
  casa         Casa    @relation(fields: [num_casa_fk], references: [num_casa])
  num_casa_fk  Int
}

model Casa {
  num_casa       Int         @id @db.Integer
  calle          String      @db.VarChar(255)
  num_habitantes Int         @db.SmallInt
  telefono1      String      @db.VarChar(12)
  telefono2      String      @db.VarChar(12)
  habitantes     Habitante[]
  cuota          Cuota[]
  servicio       Servicio?
}

model Cuota {
  id_cuota     Int      @id @default(autoincrement())
  monto        Float
  fecha_limite DateTime
  pagado       Boolean  @default(false)
  casa         Casa     @relation(fields: [num_casa_fk], references: [num_casa])
  num_casa_fk  Int
}

model Servicio {
  id_servicio     Int     @id @default(autoincrement())
  estacionamiento Boolean @default(true)
  porton          Boolean @default(true)
  basura          Boolean @default(true)
  casa            Casa    @relation(fields: [num_casa_fk], references: [num_casa])
  num_casa_fk     Int     @unique
}

model Administrador {
  usuario    String  @id
  contrasena String  @db.VarChar(255)
  nombre     String  @db.VarChar(255)
  ap         String? @db.VarChar(255)
  am         String? @db.VarChar(255)
}

model Notificacion {
  id_notificacion Int     @id @default(autoincrement())
  mensaje         String  @db.VarChar(255)
  resuelto        Boolean @default(false)
}
